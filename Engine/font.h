#pragma once
#include <SFML/Graphics.hpp>
#include "constExpressions.h"

extern class Font2
{
private:

public:
	sf::Uint8 textRed{ 255 };
	sf::Uint8 textGreen{ 255 };
	sf::Uint8 textBlue{ 255 };
	sf::Vector2f startPos{ sf::Vector2f(50.f, 50.f) };

	// AthroughTildeData
#pragma region
	std::vector<bool> AthroughTildeData
	{
		// A
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// B
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0,

		// C
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 1,
		0, 1, 1, 1, 1, 0,

		// D
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0,

		// E
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 1,

		// F
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,

		// G
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// H
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// I
		1, 1, 1, 1, 1, 1,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		1, 1, 1, 1, 1, 1,

		// J
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// K
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 1, 1, 0,
		1, 1, 1, 1, 0, 0,
		1, 1, 1, 1, 0, 0,
		1, 1, 0, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// L
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 1,

		// M
		1, 0, 0, 0, 0, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// N
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1,
		1, 1, 0, 1, 1, 1,
		1, 1, 0, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// O
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// P
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,

		// Q
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,
		0, 0, 0, 1, 1, 1,

		// R
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// S
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 0, 0,
		0, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 1, 0,
		0, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// T
		1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 0, 1,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,

		// U
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// V
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 0, 1, 0,
		0, 0, 1, 1, 0, 0,

		// W
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		0, 1, 1, 1, 1, 0,

		// X
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// Y
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 0, 0, 1, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,

		// Z
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 0, 0, 1, 1, 0,
		0, 0, 1, 1, 0, 0,
		0, 1, 1, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1,

		// sp
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,

		// 0
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// 1
		0, 0, 1, 1, 0, 0,
		0, 1, 1, 1, 0, 0,
		1, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		1, 1, 1, 1, 1, 1,

		// 2
		1, 1, 1, 1, 1, 0,
		1, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 1, 1, 1,
		0, 0, 1, 1, 1, 0,
		0, 1, 1, 1, 0, 0,
		1, 1, 1, 0, 0, 0,
		1, 1, 1, 1, 1, 1,

		// 3
		1, 1, 1, 1, 1, 1,
		1, 0, 0, 1, 1, 0,
		0, 0, 1, 1, 0, 0,
		0, 1, 1, 1, 1, 0,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		1, 0, 0, 1, 1, 1,
		0, 1, 1, 1, 1, 0,

		// 4
		0, 0, 0, 1, 1, 0,
		0, 0, 1, 1, 1, 0,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 1, 1, 0,
		1, 1, 0, 1, 1, 0,
		1, 1, 1, 1, 1, 1,
		0, 0, 0, 1, 1, 0,
		0, 0, 0, 1, 1, 0,

		// 5
		1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		0, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// 6
		0, 1, 1, 1, 1, 0,
		1, 1, 1, 0, 0, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// 7
		1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 1, 1,
		0, 0, 0, 1, 1, 0,
		1, 1, 1, 1, 1, 1,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 1, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 0,

		// 8
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// 9
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 1,
		0, 0, 0, 0, 1, 1,
		1, 0, 0, 1, 1, 1,
		0, 1, 1, 1, 1, 0,

		// a
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 0,
		1, 0, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 1, 1,
		1, 0, 0, 0, 1, 1,
		0, 1, 1, 1, 0, 1,

		// b
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0,

		// c
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 1,
		0, 1, 1, 1, 1, 0,

		// d
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 1,

		// e
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 1,
		0, 1, 1, 1, 1, 0,

		// f
		0, 0, 1, 1, 1, 1,
		0, 1, 1, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		0, 1, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 0,
		0, 1, 1, 1, 0, 0,

		// g
		0, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 1,
		0, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// h
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// i
		0, 0, 1, 1, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 1, 1, 1, 1, 0,

		// j
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		1, 0, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// k
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 1, 1, 0,
		1, 1, 1, 1, 0, 0,
		1, 1, 1, 0, 0, 0,
		1, 1, 1, 1, 0, 0,
		1, 1, 0, 1, 1, 0,
		1, 1, 0, 0, 1, 1,

		// l
		0, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 1, 0,

		// m
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,

		// n
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 1,

		// o
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// p
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,

		// q
		0, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 1, 1,

		// r
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 0, 0,

		// s
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// t
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		1, 1, 1, 1, 1, 1,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 0, 1, 1, 0,

		// u
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// v
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 0, 1, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,

		// w
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1,
		0, 1, 1, 1, 1, 0,

		// x
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,

		// y
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 1,
		0, 0, 0, 0, 1, 1, 
		1, 0, 0, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// z
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 1, 1,
		0, 0, 1, 1, 1, 0,
		0, 1, 1, 1, 0, 0,
		1, 1, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1,

		// ?
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 1, 0, 0, 1, 1,
		0, 0, 0, 1, 1, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 1, 1, 0, 0,

		// !
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 1, 1, 0, 0,
		0, 0, 1, 1, 0, 0,

		// @
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 0, 1, 1,
		1, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 0, 1,
		1, 0, 1, 0, 1, 1,
		1, 0, 1, 1, 1, 0,
		1, 1, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 1,

		// #
		0, 0, 0, 1, 0, 1,
		0, 0, 0, 1, 0, 1,
		0, 1, 1, 1, 1, 1,
		0, 0, 1, 0, 1, 0,
		0, 0, 1, 0, 1, 0,
		1, 1, 1, 1, 1, 1,
		0, 1, 0, 1, 0, 0,
		0, 1, 0, 1, 0, 0,

		// $
		0, 1, 1, 1, 1, 0,
		1, 1, 0, 1, 1, 1,
		1, 1, 0, 1, 0, 0,
		0, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 1, 0,
		0, 0, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1,
		0, 1, 1, 1, 1, 0,

		// ~
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 1, 1, 0, 1,
		0, 1, 0, 1, 1, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0


	};
	#pragma endregion
	std::vector<bool> specialChars
	{
		// ^ SWORD
		1, 0, 1, 1, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 0, 0,
		1, 1, 0, 1, 0, 0, 0, 0,
		1, 0, 1, 0, 1, 0, 0, 0,
		0, 0, 0, 1, 0, 1, 0, 0,
		0, 0, 0, 0, 1, 0, 1, 0,
		0, 0, 0, 0, 0, 1, 0, 1,
		0, 0, 0, 0, 0, 0, 1, 1,

		// | STAFF
		0, 0, 1, 0, 0, 0, 0, 0,
		0, 1, 0, 1, 0, 0, 0, 0,
		1, 0, 0, 0, 1, 0, 0, 0,
		0, 1, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 1, 1, 1, 0, 0,
		0, 0, 0, 0, 1, 1, 1, 0,
		0, 0, 0, 0, 0, 1, 1, 1,
		0, 0, 0, 0, 0, 0, 1, 1,

		// _ POTION
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		1, 0, 0, 0, 0, 0, 0, 1,
		1, 0, 0, 0, 0, 0, 0, 1,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 0, 1, 1, 1, 1, 0, 0,

		// < AXE
		1, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 0, 0,
		1, 0, 1, 1, 0, 0, 0, 0,
		1, 0, 1, 1, 1, 0, 0, 0,
		1, 0, 0, 0, 1, 1, 0, 0,
		1, 1, 1, 1, 0, 1, 1, 0,
		0, 0, 0, 0, 0, 0, 1, 1,
		0, 0, 0, 0, 0, 0, 0, 1,

		// = KEY
		1, 0, 1, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		1, 0, 1, 0, 0, 0, 0, 0,
		0, 0, 0, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 1, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 0, 0,
		0, 0, 0, 0, 0, 1, 1, 0,
		0, 0, 0, 0, 0, 1, 0, 1,

		// { BOW
		1, 1, 0, 0, 0, 0, 0, 0,
		1, 0, 1, 0, 0, 0, 0, 0,
		1, 0, 0, 1, 0, 0, 0, 0,
		1, 1, 0, 0, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 0, 1, 1, 0, 0, 1, 0,
		0, 0, 0, 1, 1, 0, 0, 1,
		0, 0, 0, 0, 1, 1, 1, 1

	};
	std::vector<bool> punctuationChars
	{
		// :
		0, 0,
		0, 0,
		1, 1,
		1, 1,
		0, 0,
		1, 1,
		1, 1,
		0, 0,

		// .
		0, 0,
		0, 0,
		0, 0,
		0, 0,
		0, 0,
		0, 0,
		1, 1,
		1, 1,

		// ,
		0, 0,
		0, 0,
		0, 0,
		0, 0,
		1, 1,
		1, 1,
		0, 1,
		1, 0
	};
	sf::Image fontImage;
	sf::Image fontSpecialImage;
	sf::Image fontPunctuationImage;
	sf::Texture fontTexture;
	sf::Texture fontSpecialTexture;
	sf::Texture fontPunctuationTexture;

	sf::Sprite charSprite;
	// Sets character kerning
	sf::Vector2f moveR{ sf::Vector2f(7.f, 0.f) };
	sf::Vector2i addon{ sf::Vector2i(0, 0) };
	Font2();
	void createFontImageAndTexture();
	void setColor(sf::Color colorIn, bool ignoreReassignment = false);
	bool attachCharImageSubRectToSprite(char input);
	sf::Vector2f getPos();
	void setPos(sf::Vector2f newPos);
	sf::Vector2f getStartPos();
	void setStartPos(sf::Vector2f newPos = sf::Vector2f(50.f, 50.f));
	void move(sf::Vector2f offset);
	int getRectOffset(char input);
	const sf::Color alphaKey{ sf::Color(69,69,69) };
	void resetImage(sf::Color colorIn2);

	//virtual void draw(sf::RenderTarget& target, sf::RenderStates states) const;)
};